name: Pull Request
on:
  pull_request:
    branches:
    - master

jobs:
  lints:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        command:
          - lint_flake8
          - lint_pylint
          - lint_bandit
          - lint_mypy
          - lint_black
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - name: Install Poetry
      run: |
        pip install poetry tox
    - name: Run ${{ matrix.command }}
      run: make ${{ matrix.command }}
  editorconfig:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: snow-actions/eclint@v1.0.1
      with:
        args: 'check'
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        pip install poetry tox
    - name: Install jsonnet-bundler
      run: |
        mkdir -p /opt/bin && curl -sLo /opt/bin/jb \
          https://github.com/jsonnet-bundler/jsonnet-bundler/releases/download/v0.4.0/jb-linux-amd64 \
          && chmod +x /opt/bin/jb
    - name: Update PATH
      run: echo "/opt/bin" >> $GITHUB_PATH
    - name: Run tests on Python ${{ matrix.python-version }}
      run: make test_py${{ matrix.python-version }}
  benchs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - '3.6'
          - '3.7'
          - '3.8'
          - '3.9'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        pip install poetry tox
    - name: Install jsonnet-bundler
      run: |
        mkdir -p /opt/bin && curl -sLo /opt/bin/jb \
          https://github.com/jsonnet-bundler/jsonnet-bundler/releases/download/v0.4.0/jb-linux-amd64 \
          && chmod +x /opt/bin/jb
    - name: Update PATH
      run: echo "/opt/bin" >> $GITHUB_PATH
    - name: Run benchmarks on Python ${{ matrix.python-version }}
      run: make bench_py${{ matrix.python-version }}
  integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install Poetry, setup Poetry virtualenv, and build Kapitan helm bindings
      run: |
        pip install poetry tox
        poetry env use python3.8
        poetry install
        poetry run build_kapitan_helm_binding
    - name: Install jsonnet-bundler
      run: |
        mkdir -p /opt/bin && curl -sLo /opt/bin/jb \
          https://github.com/jsonnet-bundler/jsonnet-bundler/releases/download/v0.4.0/jb-linux-amd64 \
          && chmod +x /opt/bin/jb
    - name: Update PATH
      run: echo "/opt/bin" >> $GITHUB_PATH
    - name: Pull in SSH deploy key for integration tests
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.CATALOG_DEPLOY_KEY }}"
    - name: Run integration tests on Python 3.8
      run: make test_integration
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check Docs
      run: make docs-vale
  build:
    needs:
    - lints
    - tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: "0"
    - name: Build image
      run: make docker
